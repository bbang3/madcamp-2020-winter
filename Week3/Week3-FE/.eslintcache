[{"/home/bbang3/madcamp_week3/src/App.js":"1","/home/bbang3/madcamp_week3/src/reportWebVitals.js":"2","/home/bbang3/madcamp_week3/src/index.js":"3","/home/bbang3/madcamp_week3/src/components/Navbar/NavbarElements.js":"4","/home/bbang3/madcamp_week3/src/pages/index.js":"5","/home/bbang3/madcamp_week3/src/pages/Match.js":"6","/home/bbang3/madcamp_week3/src/components/MatchForm.js":"7","/home/bbang3/madcamp_week3/src/pages/MatchMake.js":"8","/home/bbang3/madcamp_week3/src/components/Form/FormGroupDetails.js":"9","/home/bbang3/madcamp_week3/src/components/Form/MultiStepForm.js":"10","/home/bbang3/madcamp_week3/src/components/Form/Confirm.js":"11","/home/bbang3/madcamp_week3/src/components/Form/FormPlace.js":"12","/home/bbang3/madcamp_week3/src/components/Form/FormDate.js":"13","/home/bbang3/madcamp_week3/src/components/Navbar/Navbar.js":"14","/home/bbang3/madcamp_week3/src/pages/Register.js":"15","/home/bbang3/madcamp_week3/src/_actions/types.js":"16","/home/bbang3/madcamp_week3/src/_actions/user_action.js":"17","/home/bbang3/madcamp_week3/src/_reducers/index.js":"18","/home/bbang3/madcamp_week3/src/_reducers/user_reducer.js":"19","/home/bbang3/madcamp_week3/src/pages/Login.js":"20","/home/bbang3/madcamp_week3/src/pages/MyPage.js":"21","/home/bbang3/madcamp_week3/src/components/MatchList.js":"22","/home/bbang3/madcamp_week3/src/components/MatchDetail.js":"23","/home/bbang3/madcamp_week3/src/pages/Chat2.js":"24","/home/bbang3/madcamp_week3/src/pages/Chat.js":"25"},{"size":2350,"mtime":1611101840851,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610781852712,"results":"28","hashOfConfig":"27"},{"size":1411,"mtime":1610999229670,"results":"29","hashOfConfig":"27"},{"size":1701,"mtime":1610976018940,"results":"30","hashOfConfig":"27"},{"size":1050,"mtime":1611097146271,"results":"31","hashOfConfig":"27"},{"size":5081,"mtime":1610884506850,"results":"32","hashOfConfig":"27"},{"size":2159,"mtime":1610898472010,"results":"33","hashOfConfig":"27"},{"size":320,"mtime":1611104543451,"results":"34","hashOfConfig":"27"},{"size":1956,"mtime":1611104138351,"results":"35","hashOfConfig":"27"},{"size":4015,"mtime":1611104649801,"results":"36","hashOfConfig":"27"},{"size":1119,"mtime":1611104566381,"results":"37","hashOfConfig":"27"},{"size":1398,"mtime":1611104524021,"results":"38","hashOfConfig":"27"},{"size":1858,"mtime":1611038291721,"results":"39","hashOfConfig":"27"},{"size":1146,"mtime":1611097252081,"results":"40","hashOfConfig":"27"},{"size":3369,"mtime":1610976438000,"results":"41","hashOfConfig":"27"},{"size":121,"mtime":1610969415967,"results":"42","hashOfConfig":"27"},{"size":1733,"mtime":1611102575421,"results":"43","hashOfConfig":"27"},{"size":589,"mtime":1610969416107,"results":"44","hashOfConfig":"27"},{"size":860,"mtime":1610969416107,"results":"45","hashOfConfig":"27"},{"size":2863,"mtime":1611094430211,"results":"46","hashOfConfig":"27"},{"size":532,"mtime":1611092180701,"results":"47","hashOfConfig":"27"},{"size":2943,"mtime":1611102618421,"results":"48","hashOfConfig":"27"},{"size":643,"mtime":1611097702571,"results":"49","hashOfConfig":"27"},{"size":4035,"mtime":1611096910321,"results":"50","hashOfConfig":"27"},{"size":6098,"mtime":1611098426661,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"s25wab",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"55"},"/home/bbang3/madcamp_week3/src/App.js",["117","118","119"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./pages\";\nimport MatchMake from \"./pages/MatchMake\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport axios from \"axios\";\nimport MyPage from \"./pages/MyPage\";\nimport Chat from \"./pages/Chat\";\nimport Chat2 from \"./pages/Chat2\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const authenticated = user != null;\n  console.log(user);\n\n  useEffect(() => {\n    const userId = window.sessionStorage.getItem(\"userId\");\n    const name = window.sessionStorage.getItem(\"name\");\n    const token = window.sessionStorage.getItem(\"token\");\n    if (token !== null) setUser({ userId, name, token });\n  }, []);\n\n  const login = (userId, name, token) => {\n    window.sessionStorage.setItem(\"userId\", userId);\n    window.sessionStorage.setItem(\"name\", name);\n    window.sessionStorage.setItem(\"token\", token);\n    setUser({ userId, name, token });\n  };\n  const logout = async () => {\n    try {\n      const token = window.sessionStorage.getItem(\"token\");\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/users/logout`,\n        {},\n        { headers: { token: token } }\n      );\n      console.log(response.data);\n      window.sessionStorage.removeItem(\"userId\");\n      window.sessionStorage.removeItem(\"name\");\n      window.sessionStorage.removeItem(\"token\");\n      setUser(null);\n    } catch (error) {\n      console.log(\"Logout error\");\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar authenticated={authenticated} login={login} logout={logout} />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        {/* <Route path=\"/Home\" component={index} /> */}\n        <Route\n          path=\"/match\"\n          exact\n          render={(props) => <MatchMake {...props} user={user} />}\n        />\n        <Route\n          path=\"/mypage\"\n          render={(props) => <MyPage {...props} user={user} />}\n        />\n        <Route\n          path=\"/login\"\n          render={(props) => <Login {...props} login={login} />}\n        />\n        <Route path=\"/signup\" exact component={Register} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",["120","121"],"/home/bbang3/madcamp_week3/src/reportWebVitals.js",[],["122","123"],"/home/bbang3/madcamp_week3/src/index.js",[],["124","125"],"/home/bbang3/madcamp_week3/src/components/Navbar/NavbarElements.js",[],"/home/bbang3/madcamp_week3/src/pages/index.js",["126","127","128","129","130","131"],"/home/bbang3/madcamp_week3/src/pages/Match.js",[],["132","133"],"/home/bbang3/madcamp_week3/src/components/MatchForm.js",["134","135","136","137"],"import {\n  Button,\n  MenuItem,\n  Select,\n  Slider,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\n\nconst MatchForm = ({ sports }) => {\n  const initialValues = {\n    skills: 5,\n    intensity: 5,\n    age: 20,\n  };\n\n  const { register, handleSubmit, watch, errors, control } = useForm({\n    defaultValues: initialValues,\n  });\n  const onSubmit = (data) => {\n    data.age = parseInt(data.age);\n    console.log(data);\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <section>\n        <label> 1. 실력 </label>\n        <Controller\n          name=\"skills\"\n          control={control}\n          render={(props) => (\n            <Slider\n              {...props}\n              onChange={(_, value) => {\n                props.onChange(value);\n              }}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={10}\n              step={1}\n            />\n          )}\n        />\n      </section>\n\n      <section>\n        <label> 2. 플레이스타일 </label>\n        <Controller\n          name=\"intensity\"\n          control={control}\n          render={(props) => (\n            <Slider\n              {...props}\n              onChange={(_, value) => {\n                props.onChange(value);\n              }}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={10}\n              step={1}\n            />\n          )}\n        />\n      </section>\n\n      <section>\n        <label> 3. 평균 나이대 </label>{\" \"}\n        <Controller\n          as={TextField}\n          name=\"age\"\n          control={control}\n          inputRef={register({ required: \"required\" })}\n          type=\"number\"\n        />\n        {errors.age && \"required\"}\n        {/* <Controller\n          name=\"age\"\n          control={control}\n          render={(props) => (\n            <TextField\n              {...props}\n              label=\"age\"\n              type=\"nu\"\n            />\n          )}\n        /> */}\n      </section>\n\n      <Button type=\"submit\"> Button </Button>\n    </form>\n  );\n};\n\nexport default MatchForm;\n","/home/bbang3/madcamp_week3/src/pages/MatchMake.js",[],"/home/bbang3/madcamp_week3/src/components/Form/FormGroupDetails.js",["138","139","140","141"],"/home/bbang3/madcamp_week3/src/components/Form/MultiStepForm.js",["142"],"/home/bbang3/madcamp_week3/src/components/Form/Confirm.js",[],"/home/bbang3/madcamp_week3/src/components/Form/FormPlace.js",["143","144","145"],"/home/bbang3/madcamp_week3/src/components/Form/FormDate.js",["146","147","148"],"import { Box, Button } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  DatePicker,\n} from \"@material-ui/pickers\";\nimport React from \"react\";\n\nconst FormDate = ({ date, setDate, prevStep, nextStep }) => {\n  const prev = (e) => {\n    e.preventDefault();\n    prevStep();\n  };\n  const next = (e) => {\n    e.preventDefault();\n    nextStep();\n  };\n\n  return (\n    <>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Box paddingBottom={2}>\n          <DatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"경기 일시\"\n            format=\"yyyy/MM/dd\"\n            value={date}\n            onChange={(date) => {\n              setDate(date);\n              console.log(date);\n            }}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n            maxDate={new Date(date).setMonth(date.getMonth() + 1)}\n            disableToolbar\n            disablePast\n            variant=\"static\"\n          />\n        </Box>\n        <Box>\n          <KeyboardTimePicker\n            margin=\"normal\"\n            id=\"time-picker\"\n            label=\"경기 시각\"\n            value={date}\n            onChange={(date) => setDate(date)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change time\",\n            }}\n            disablePast\n            minutesStep={30}\n          />\n        </Box>\n      </MuiPickersUtilsProvider>\n      <Box paddingBottom={2}>\n        {`선택한 경기 시각: ${date.toLocaleString(\"ko-KR\")}`}\n      </Box>\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={next}>\n        Continue\n      </Button>\n      <Button color=\"secondary\" variant=\"contained\" onClick={prev}>\n        Back\n      </Button> */}\n    </>\n  );\n};\n\nexport default FormDate;\n","/home/bbang3/madcamp_week3/src/components/Navbar/Navbar.js",["149","150"],"import React from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\nconst Navbar = ({ login, logout, authenticated }) => {\n  return (\n    <>\n      <Nav>\n        <NavLink exact to=\"/\" activeStyle>\n          <h1> HAKKA </h1>\n        </NavLink>\n\n        <NavMenu>\n          <NavLink exact to=\"/\" activeStyle>\n            Home\n          </NavLink>\n          <NavLink exact to=\"/match\" activeStyle>\n            Match\n          </NavLink>\n          <NavLink exact to=\"/mypage\" activeStyle>\n            My Page\n          </NavLink>\n          {/* Second Nav */}\n          {/* <NavBtnLink to=\"/sign-in\">Sign In</NavBtnLink> */}\n        </NavMenu>\n        {authenticated ? (\n          <NavBtn onClick={() => logout()}>\n            <NavBtnLink to=\"/\">Log out</NavBtnLink>\n          </NavBtn>\n        ) : (\n          <NavBtn>\n            <NavBtnLink to=\"/login\">Log in</NavBtnLink>\n          </NavBtn>\n        )}\n\n        <NavBtn>\n          <NavBtnLink to=\"/signup\">Sign Up</NavBtnLink>\n        </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","/home/bbang3/madcamp_week3/src/pages/Register.js",[],"/home/bbang3/madcamp_week3/src/_actions/types.js",[],"/home/bbang3/madcamp_week3/src/_actions/user_action.js",[],"/home/bbang3/madcamp_week3/src/_reducers/index.js",[],"/home/bbang3/madcamp_week3/src/_reducers/user_reducer.js",[],"/home/bbang3/madcamp_week3/src/pages/Login.js",["151"],"// import axios from 'axios';\nimport { Button, Paper, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useDispatch } from \"react-redux\"; //dispatch를 이용해서 action을 취할 것임\nimport { loginUser } from \"../_actions/user_action\";\nexport let username = \"\";\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    console.log(e.target.name, e.target.value);\n    setInput({ ...input, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // page refresh가 되지 않도록 해주는 것(그래야 밑에 해야할 일들을 할 수가 있음)\n    const { email, password } = input;\n    //가져온 Email과 Password들을 서버에 보내야함 --> axios라는 것을 이용할 것임\n    let body = {\n      email: email,\n      password: password,\n    };\n    //리덕스를 사용하지 않았다면 바로 하면 되는 부분임.... 하지만 우리는 리덕스를 사용해야함 ㅜㅜ\n    // axios.post('/api/users/login', body)\n    // .then(response => {\n    //     //처리하고 싶은 것들을 처리하면 되는 것임\n    // })\n\n    //action을 취할 것임(바뀌는 부분???)\n    dispatch(loginUser(body)) //user_action 내에서 우리는 서버로 보낼 것임??//\n      .then((response) => {\n        if (response.payload.loginSuccess) {\n          const { userId, name, token } = response.payload;\n          // loginSuccess는 서버에서 받아온 값... 즉 서버에서 로그인이 성공하면 true를 반환하기 때문임\n          console.log(\"token\", token);\n          props.login(userId, name, token);\n          props.history.push(\"/\");\n        } else {\n          alert(\"Error\");\n        }\n      });\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <Paper>\n        <form onSubmit={handleSubmit} style={{ margin: \"30px\" }}>\n          <Typography gutterBottom> Email </Typography>\n          <TextField\n            name=\"email\"\n            label=\"email\"\n            type=\"email\"\n            required\n            onChange={handleChange}\n          />\n          <br />\n          <Typography gutterBottom> Password </Typography>\n          <TextField\n            name=\"password\"\n            label=\"password\"\n            type=\"password\"\n            required\n            onChange={handleChange}\n          />\n          <br />\n          <br />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/bbang3/madcamp_week3/src/pages/MyPage.js",["152"],"import { Route, Router } from \"react-router-dom\";\nimport MatchDetail from \"../components/MatchDetail\";\nimport MatchList from \"../components/MatchList\";\nconst MyPage = ({ user, match }) => {\n  return (\n    <>\n      {console.log(match)}\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <MatchList {...props} user={user} />}\n      />\n      <Route\n        path={`${match.path}/:match_id`}\n        render={(props) => <MatchDetail {...props} user={user} />}\n      />\n    </>\n  );\n};\n\nexport default MyPage;\n","/home/bbang3/madcamp_week3/src/components/MatchList.js",["153","154"],"import {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  Container,\n  Link,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Lens } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"./Navbar/NavbarElements\";\nimport Geocode from \"react-geocode\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"25vw\",\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport const MatchData = ({ request, index, match }) => {\n  const { address } = request.location;\n  const [matchedAddress, setMatchedAddress] = useState(\"\");\n\n  if (request.status === 1) {\n    const { lat, lng } = request.matchedLocation;\n\n    Geocode.fromLatLng(lat, lng).then(\n      (res) => {\n        const address = res.results[0].formatted_address;\n        setMatchedAddress(address);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  return (\n    <NavLink\n      key={index}\n      to={`${match.url}/${request.matchId}`}\n      style={{ textDecoration: \"none\", color: \"black\" }}\n    >\n      <Card>\n        <CardActionArea key={index}>\n          <CardContent>\n            {request.status === 0 ? (\n              <Box>\n                <Lens style={{ fill: \"Black\" }} />\n                <Typography> 매칭 진행 중 </Typography>\n              </Box>\n            ) : (\n              <Box>\n                <Lens style={{ fill: \"Green\" }} />\n                <Typography> 매칭 완료 </Typography>\n              </Box>\n            )}\n          </CardContent>\n          <CardContent>\n            선호하는 시간: {new Date(request.date).toLocaleString()}\n          </CardContent>\n          <CardContent> 선호하는 장소: {address}</CardContent>\n          {request.status === 1 && (\n            <>\n              <CardContent>\n                매칭된 시간: {new Date(request.matchedDate).toLocaleString()}\n              </CardContent>\n              <CardContent>매칭된 장소: {matchedAddress}</CardContent>\n            </>\n          )}\n        </CardActionArea>\n      </Card>\n    </NavLink>\n  );\n};\n\nconst MatchList = ({ match }) => {\n  const user = {\n    token: sessionStorage.getItem(\"token\"),\n    userId: sessionStorage.getItem(\"userId\"),\n    name: sessionStorage.getItem(\"name\"),\n  };\n  const [requests, setRequests] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(\"/match\", {\n        headers: { token: user.token },\n      });\n      setRequests(response.data);\n    }\n    fetchData();\n  }, [user.token]);\n\n  const renderRequests = requests.map((request, index) => {\n    console.log(request);\n    console.log(typeof request.date);\n    return (\n      <MatchData match={match} index={index} request={request}></MatchData>\n    );\n  });\n\n  // return <NavLink to=\"/\"> Hello </NavLink>;\n  return <Container>{renderRequests}</Container>;\n};\n\nexport default MatchList;\n","/home/bbang3/madcamp_week3/src/components/MatchDetail.js",["155"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Chat from \"../pages/Chat\";\n\nconst MatchDetail = ({ user, match }) => {\n  const [matchInfo, setMatchInfo] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(`/match/${match.params.match_id}`, {\n        withCredentials: true,\n        headers: { token: user.token },\n      });\n      setMatchInfo(response.data);\n    }\n    fetchData();\n  }, [user.token, match.params.match_id]);\n\n  return (\n    <div>\n      <Chat matchId={match.params.match_id}></Chat>\n    </div>\n  );\n};\n\nexport default MatchDetail;\n",["156","157"],"/home/bbang3/madcamp_week3/src/pages/Chat2.js",["158","159","160"],"import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nconst socket = io.connect(\"http://192.249.18.244:4000/\");\n//,{ transport : ['websocket'] }\nfunction Chat2() {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n  const [chat, setChat] = useState([]);\n  const [count, setCount] = useState(0);\n  const groupid = \"4\";\n  // 매칭된 방을 클릭하면 받아오는 group_id\n\n  useEffect(() => {\n    // const request = axios\n    // .post('http://192.249.18.247:4000/chat/getchat',{roomid: groupid})\n    // .then((response) => response.data);\n    axios\n      .post(\"http://192.249.18.244:8080/chat/loadchat\", { roomid: groupid })\n      .then(async (response) => await onLoadChat(response.data));\n    // console.log(\"Data: \" + response.data.chatContent);\n    // console.log(\"!!\");\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"room\", groupid);\n    //socket emit을 하면 room으로 나의 groupid를 보낸다...\n  }, [count]);\n\n  useEffect(() => {\n    //setCount(count + 1);\n    socket.on(\"updatemessage\", async ({ name: name, message: message }) => {\n      //서버에 보내진 채팅을 가져온다.\n      //setCount(count + 1);\n      console.log(\"socket message arrived\");\n      // console.log(\"name: \" + name);\n      // console.log('message: ' + message);\n      console.log(\"setting chat\", chat.length);\n      await setChat([...chat, { name, message }]); //새로운 채팅이 들어와서 저장이 된다.\n      //console.log(\"recieved chat issssssssssssssssssssssss\");\n      console.log(chat);\n      await setCount(count + 1);\n    });\n    //setChat([...chat, { namec, messagec }])//새로운 채팅이 들어와서 저장이 된다.\n  }, [count]);\n\n  const onLoadChat = (e) => {\n    const loadedChat = [];\n    for (var i = 0; i < e.content.length; i++) {\n      let name = e.content[i].sender;\n      // console.log(\"name: \", name);\n      // console.log(\"meg: \", meg);\n      let meg = e.content[i].message;\n      //const subchat = {name, meg};\n      //chat[i].name = name;\n      //chat[i].message = meg;\n      //setChat(chat => [...chat,{name: name, message: meg}])\n      // prevChat.push({name: name, message: meg});\n      // prevChat.push({name: \"!!\", message: \"@@@@\"});\n      loadedChat.push({ name: name, message: meg });\n    }\n    setChat(loadedChat);\n    //console.log(\"chatcontent: \",e.content[0].message)\n  };\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = async (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    console.log(\"client message :\" + message);\n    socket.emit(\"message\", { name, message }); //내가 쓴 메시지를 서버에 보낸다.\n    console.log(\"emit socket\");\n    await setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    console.log(chat.length);\n    return chat.map((\n      { name, message },\n      index //저장된 채팅을 보여준다.\n    ) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messanger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>count: {count}</div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button onClick={() => setCount(count + 1)}>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default Chat2;\n","/home/bbang3/madcamp_week3/src/pages/Chat.js",["161","162","163","164"],"import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport sendimg from \"../image/send3.png\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nconst socket = io.connect(`${process.env.REACT_APP_CHAT_URL}`);\n//,{ transport : ['websocket'] }\nconst Chat = ({ matchId }) => {\n  const user = {\n    name: sessionStorage.getItem(\"name\"),\n    token: sessionStorage.getItem(\"token\"),\n    userId: sessionStorage.getItem(\"userId\"),\n  };\n  const [state, setState] = useState({ message: \"\", name: user.name });\n  const [chat, setChat] = useState([]);\n  const [count, setCount] = useState(0);\n  const groupid = matchId;\n  // 매칭된 방을 클릭하면 받아오는 group_i\n  useEffect(() => {\n    // const request = axios\n    // .post('http://192.249.18.247:4000/chat/getchat',{roomid: groupid})\n    // .then((response) => response.data);\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/chat/loadchat`, {\n        roomid: groupid,\n      })\n      .then(async (response) => await onLoadChat(response.data));\n    // console.log(\"Data: \" + response.data.chatContent);\n    // console.log(\"!!\");\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"room\", groupid);\n    //socket emit을 하면 room으로 나의 groupid를 보낸다...\n    //console.log(\"아 힘들어 죽어 ㅜㅜㅜ 엄마 ㅜㅜㅜㅜ 살려줘 ㅜㅜㅜ \")\n  }, [count]);\n\n  useEffect(() => {\n    console.log(\"before socket\", chat.length);\n\n    socket.on(\"updatemessage\", async ({ name, message }) => {\n      //서버에 보내진 채팅을 가져온다.\n\n      console.log(\"socket message arrived\");\n\n      console.log(\"setting chat\", chat.length);\n      await setChat([...chat, { name: name, message: message }]); //새로운 채팅이 들어와서 저장이 된다.\n      //console.log(\"recieved chat issssssssssssssssssssssss\");\n      console.log(\"after setting chat\", chat.length);\n      await setCount(count + 1);\n    });\n    //setChat([...chat, { namec, messagec }])//새로운 채팅이 들어와서 저장이 된다.\n  }, [count]);\n\n  const onLoadChat = (e) => {\n    const loadedChat = [];\n    for (var i = 0; i < e.content.length; i++) {\n      let name = e.content[i].sender;\n\n      let meg = e.content[i].message;\n\n      loadedChat.push({ name: name, message: meg });\n    }\n    setChat(loadedChat);\n  };\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = async (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    console.log(\"client message :\" + message);\n    socket.emit(\"message\", { name, message }); //내가 쓴 메시지를 서버에 보낸다.\n    console.log(\"emit socket\");\n    await setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    console.log(\"renderchat\", chat.length);\n    return chat.map((\n      { name, message },\n      index //저장된 채팅을 보여준다.\n    ) => (\n      <div key={index}>\n        {/* <h3>\n          {name}: <span>{message}</span>\n        </h3> */}\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\">\n              <h6>\n                {name[1]}\n                {name[2]}\n              </h6>\n            </Avatar>\n          }\n          title={message}\n        />\n      </div>\n    ));\n  };\n  // //prevChat.push({name: \"!!\", message: \"@@@@\"})\n  // console.log('prevChat: ',{prevChat});\n  return (\n    // <div className=\"card\">\n    //   <form onSubmit={onMessageSubmit}>\n    //     {/* <div className=\"name-field\">\n    //       <TextField\n    //         name=\"name\"\n    //         onChange={e => onTextChange(e)}\n    //         value={state.name}\n    //         label=\"Name\"\n    //       />\n    //     </div> */}\n\n    //     <div>\n    //       <TextField\n    //         name=\"message\"\n    //         onChange={e => onTextChange(e)}\n    //         value={state.message}\n    //         id=\"outlined-multiline-static\"\n    //         variant=\"outlined\"\n    //         label=\"Message\"\n    //       />\n    //       <button onClick={() => setCount(count + 1)}>Send</button>\n    //     </div>\n    //     {/* <button onClick={() => setCount(count + 1)}>Send Message</button> */}\n    //   </form>\n    //   <ScrollToBottom className=\"render-chat\">\n    //     <h1>ROOM</h1>\n    //     <div>\n    //     {renderChat()}\n    //     </div>\n    //   </ScrollToBottom>\n    // </div>\n\n    <div className=\"card2\">\n      <div className=\"chatform\">\n        <h1>ROOM</h1>\n      </div>\n      <ScrollToBottom className=\"render-chat\">\n        {/* <h1>ROOM</h1> */}\n        <div>{renderChat()}</div>\n      </ScrollToBottom>\n      <form onSubmit={onMessageSubmit} style={{ height: \"80px\" }}>\n        {/* <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={e => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          />\n        </div> */}\n\n        <div>\n          <TextField\n            item\n            xs={10}\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            //id=\"outlined-multiline\"\n            id=\"full-width-text-field\"\n            variant=\"outlined\"\n            label=\"Message\"\n            style={{ width: 310 }}\n            //size = \"small\"\n            //fullWidth = true\n          />\n          {/* <Button onClick={() => setCount(count + 1)}>\n            <Email color=\"primary\"\n            width='65px'\n            style = {{width: 70}}/>\n          </Button> */}\n          <button>\n            <img\n              src={sendimg}\n              width=\"43px\"\n              //padding = \"10px\"\n              //height='50px'\n              //alt='testA'\n              onClick={() => setCount(count + 1)}\n            />\n          </button>\n        </div>\n        {/* <button onClick={() => setCount(count + 1)}>Send Message</button> */}\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n",{"ruleId":"165","severity":1,"message":"166","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":11},{"ruleId":"165","severity":1,"message":"169","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":12},{"ruleId":"165","severity":1,"message":"170","line":17,"column":8,"nodeType":"167","messageId":"168","endLine":17,"endColumn":13},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"171","replacedBy":"177"},{"ruleId":"173","replacedBy":"178"},{"ruleId":"165","severity":1,"message":"179","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":14},{"ruleId":"165","severity":1,"message":"180","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"181","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"182","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":17},{"ruleId":"165","severity":1,"message":"183","line":7,"column":7,"nodeType":"167","messageId":"168","endLine":7,"endColumn":15},{"ruleId":"165","severity":1,"message":"184","line":15,"column":7,"nodeType":"167","messageId":"168","endLine":15,"endColumn":19},{"ruleId":"171","replacedBy":"185"},{"ruleId":"173","replacedBy":"186"},{"ruleId":"165","severity":1,"message":"187","line":3,"column":3,"nodeType":"167","messageId":"168","endLine":3,"endColumn":11},{"ruleId":"165","severity":1,"message":"188","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":9},{"ruleId":"165","severity":1,"message":"180","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":13},{"ruleId":"165","severity":1,"message":"189","line":19,"column":35,"nodeType":"167","messageId":"168","endLine":19,"endColumn":40},{"ruleId":"165","severity":1,"message":"190","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"191","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"192","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":23},{"ruleId":"165","severity":1,"message":"193","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"194","line":3,"column":17,"nodeType":"167","messageId":"168","endLine":3,"endColumn":26},{"ruleId":"165","severity":1,"message":"193","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":16},{"ruleId":"165","severity":1,"message":"195","line":1,"column":18,"nodeType":"167","messageId":"168","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"196","line":3,"column":17,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"165","severity":1,"message":"193","line":1,"column":15,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"197","line":11,"column":9,"nodeType":"167","messageId":"168","endLine":11,"endColumn":13},{"ruleId":"165","severity":1,"message":"198","line":15,"column":9,"nodeType":"167","messageId":"168","endLine":15,"endColumn":13},{"ruleId":"165","severity":1,"message":"199","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":20},{"ruleId":"165","severity":1,"message":"200","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":7},{"ruleId":"165","severity":1,"message":"199","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":20},{"ruleId":"165","severity":1,"message":"201","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":23},{"ruleId":"165","severity":1,"message":"179","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":7},{"ruleId":"165","severity":1,"message":"202","line":89,"column":9,"nodeType":"167","messageId":"168","endLine":89,"endColumn":16},{"ruleId":"165","severity":1,"message":"203","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":19},{"ruleId":"171","replacedBy":"204"},{"ruleId":"173","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":34,"column":41,"nodeType":"208","messageId":"209","endLine":34,"endColumn":51,"fix":"210"},{"ruleId":"206","severity":1,"message":"211","line":34,"column":53,"nodeType":"208","messageId":"209","endLine":34,"endColumn":69,"fix":"212"},{"ruleId":"213","severity":1,"message":"214","line":47,"column":6,"nodeType":"215","endLine":47,"endColumn":13,"suggestions":"216"},{"ruleId":"213","severity":1,"message":"217","line":35,"column":6,"nodeType":"215","endLine":35,"endColumn":8,"suggestions":"218"},{"ruleId":"213","severity":1,"message":"217","line":41,"column":6,"nodeType":"215","endLine":41,"endColumn":13,"suggestions":"219"},{"ruleId":"213","severity":1,"message":"214","line":58,"column":6,"nodeType":"215","endLine":58,"endColumn":13,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":183,"column":13,"nodeType":"223","endLine":190,"endColumn":15},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'Chat2' is defined but never used.","no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],["224"],["225"],"'Link' is defined but never used.","'Typography' is defined but never used.","'Card' is defined but never used.","'NavLink' is defined but never used.","'divStyle' is assigned a value but never used.","'introContent' is assigned a value but never used.",["224"],["225"],"'MenuItem' is defined but never used.","'Select' is defined but never used.","'watch' is assigned a value but never used.","'Dialog' is defined but never used.","'AppBar' is defined but never used.","'ThemeProvider' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'prev' is assigned a value but never used.","'next' is assigned a value but never used.","'useCookies' is defined but never used.","'Bars' is defined but never used.","'Router' is defined but never used.","'classes' is assigned a value but never used.","'matchInfo' is assigned a value but never used.",["224"],["225"],"no-useless-rename","Destructuring assignment name unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"226","text":"227"},"Destructuring assignment message unnecessarily renamed.",{"range":"228","text":"229"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array. You can also do a functional update 'setChat(c => ...)' if you only need 'chat' in the 'setChat' call.","ArrayExpression",["230"],"React Hook useEffect has a missing dependency: 'groupid'. Either include it or remove the dependency array.",["231"],["232"],["233"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1119,1129],"name",[1131,1147],"message",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"234","fix":"240"},"Update the dependencies array to be: [chat, count]",{"range":"241","text":"242"},"Update the dependencies array to be: [groupid]",{"range":"243","text":"244"},"Update the dependencies array to be: [count, groupid]",{"range":"245","text":"246"},{"range":"247","text":"242"},[1665,1672],"[chat, count]",[1309,1311],"[groupid]",[1473,1480],"[count, groupid]",[2056,2063]]